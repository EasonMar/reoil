{"version":3,"file":"index.es.js","sources":["../src/Inspect.tsx","../src/Box.tsx","../src/utils/flex.ts","../src/Image.tsx","../src/Avatar.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\n\nconst Inspect: React.FC = () => {\n  const ref = useRef<HTMLDivElement>(null)\n  const [info, setInfo] = useState({\n    width: 0,\n    height: 0\n  })\n\n  const updateInfo = ()=>{\n    setInfo({\n      ...info,\n      width: ref.current!.offsetWidth,\n      height: ref.current!.offsetHeight\n    })\n  }\n\n  useEffect(()=>{\n    const ro = new ResizeObserver(entries=>updateInfo())\n    ref.current && ro.observe(ref.current)\n    return ()=>ro.disconnect()\n  }, [ref])\n\n  return(\n    <div className='inspect' style={{\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      boxShadow: '0 0 0 1px rgba(255, 0, 255, 0.6)',\n      background: 'rgba(255, 0, 255, 0.08)',\n      top: 0,\n      left: 0,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      color: 'transparent',\n      textShadow: '0 2px 5px rgba(0,0,0,.4)',\n      fontSize: 12,\n      transition: '.4s',\n      zIndex: 9999\n    }} ref={ref} css={css`\n      &:hover {\n        background: rgba(255, 105, 180, .6) !important;\n        color: white !important;\n        backdrop-filter: blur(4px);\n      }\n    `}>\n      {info.width} x {info.height}\n    </div>\n  )\n}\n\nexport default Inspect\n","import React, { HTMLAttributes, DetailedHTMLProps } from 'react'\nimport styled from '@emotion/styled'\nimport {\n  colorStyle,\n  space,\n  layout,\n  ColorProps,\n  SpaceProps,\n  LayoutProps,\n  flex,\n  FlexProps,\n  flexbox,\n  FlexboxProps,\n  fontSize,\n  FontSizeProps,\n  fontFamily,\n  fontWeight,\n  fontStyle,\n  FontFamilyProps,\n  FontWeightProps,\n  FontStyleProps,\n  color,\n  BackgroundProps,\n  background,\n  borderRadius,\n  BorderRadiusProps,\n  boxShadow,\n  BoxShadowProps,\n  textShadow,\n  TextShadowProps,\n  textAlign,\n  TextAlignProps,\n  border,\n  BorderProps\n} from 'styled-system'\nimport { getComputedJustifyContent, getComputedAlignItems } from './utils/flex'\nimport * as CSS from 'csstype'\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport Inspect from './Inspect'\n\nexport interface BoxProps extends StyledBoxType, ColorProps {\n  center?: boolean\n  left?: boolean | string | number\n  right?: boolean | string | number\n  top?: boolean | string | number\n  bottom?: boolean | string | number\n  row?: boolean\n  rowBetween?: boolean\n  colBetween?: boolean\n  rowAround?: boolean\n  colAround?: boolean\n  rowEvenly?: boolean\n  colEvenly?: boolean\n  color?: string\n  pointer?: Boolean\n  textTransform?: CSS.TextTransformProperty\n  objectFit?: CSS.ObjectFitProperty\n  fit?: CSS.ObjectFitProperty\n  cover?: boolean\n  transition?: boolean | CSS.TransitionProperty\n  position?: CSS.PositionProperty\n  fullWidth?: boolean\n  inspect?: boolean\n  alignX?: CSS.JustifyContentProperty | CSS.AlignItemsProperty\n  alignY?: CSS.JustifyContentProperty | CSS.AlignItemsProperty\n  stretch?: boolean\n  boxSizing?: CSS.BoxSizingProperty\n  borderBox?: boolean\n  contentBox?: boolean\n  userSelect?: CSS.UserSelectProperty\n  pointerEvents?: CSS.PointerEventsProperty\n}\n\nconst Box: React.FC<\n  BoxProps & DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement>\n> = ({\n  style,\n  color,\n  row,\n  center,\n  left,\n  right,\n  top,\n  bottom,\n  rowBetween,\n  rowAround,\n  rowEvenly,\n  colBetween,\n  colAround,\n  colEvenly,\n  pointer,\n  textTransform,\n  objectFit,\n  fit,\n  cover,\n  transition,\n  position,\n  fullWidth,\n  inspect,\n  alignX,\n  alignY,\n  stretch,\n  boxSizing,\n  borderBox,\n  contentBox,\n  userSelect,\n  pointerEvents,\n  ...props\n}) => {\n  const childrenPosition = {\n    center,\n    left: typeof left === 'boolean' && left ? left : undefined,\n    right: typeof right === 'boolean' && right ? right : undefined,\n    top: typeof top === 'boolean' && top ? top : undefined,\n    bottom: typeof bottom === 'boolean' && bottom ? bottom : undefined,\n    rowBetween,\n    rowAround,\n    rowEvenly,\n    colBetween,\n    colAround,\n    colEvenly\n  }\n  const flexDirection = row ? 'row' : 'column'\n  const justifyContent = getComputedJustifyContent({\n    childrenPosition,\n    flexDirection,\n    alignX,\n    alignY,\n    stretch\n  })\n  const alignItems = getComputedAlignItems({\n    childrenPosition,\n    flexDirection,\n    alignX,\n    alignY,\n    stretch\n  })\n  const cursor = pointer ? 'pointer' : undefined\n  const transitionStyle =\n    typeof transition === 'boolean'\n      ? '.4s'\n      : typeof transition === 'string'\n      ? transition\n      : undefined\n\n  const objectFitCSS = css`\n    img,\n    video,\n    audio {\n      width: 100%;\n      height: 100%;\n      object-fit: ${cover ? 'cover' : fit || objectFit};\n    }\n  `\n\n  return (\n    <StyledBox\n      color={color}\n      flexDirection={flexDirection}\n      alignItems={alignItems}\n      justifyContent={justifyContent}\n      style={{\n        cursor,\n        textTransform,\n        transition: transitionStyle,\n        position,\n        left: typeof left !== 'boolean' ? left : undefined,\n        right: typeof right !== 'boolean' ? right : undefined,\n        top: typeof top !== 'boolean' ? top : undefined,\n        bottom: typeof bottom !== 'boolean' ? bottom : undefined,\n        width: fullWidth ? '100%' : undefined,\n        boxSizing: borderBox&&'border-box' || contentBox&&'content-box' || boxSizing,\n        userSelect,\n        pointerEvents,\n        ...style,\n      }}\n      css={css`\n        ${cover || fit || objectFit ? objectFitCSS : null};\n        ${cover || fit || (objectFit && props.borderRadius)\n          ? `overflow: hidden`\n          : null};\n        position: relative;\n      `}\n      {...props}>\n      {inspect && <Inspect />}\n      {props.children}\n    </StyledBox>\n  )\n}\n\nBox.defaultProps = {\n  display: 'flex'\n}\n\n// Props definition for Box\ntype StyledBoxType = SpaceProps &\n  LayoutProps &\n  FlexProps &\n  FlexboxProps &\n  FontSizeProps &\n  FontFamilyProps &\n  FontWeightProps &\n  FontStyleProps &\n  BackgroundProps &\n  BorderRadiusProps &\n  BoxShadowProps &\n  TextShadowProps &\n  TextAlignProps &\n  BorderProps\n\n// Use styled-theme to decorate Box\nconst StyledBox = styled.div<StyledBoxType | ColorProps>`\n  ${color}\n  ${layout}\n  ${colorStyle}\n  ${space}\n  ${flex}\n  ${flexbox}\n  ${fontSize}\n  ${fontFamily}\n  ${fontWeight}\n  ${fontStyle}\n  ${background}\n  ${borderRadius}\n  ${boxShadow}\n  ${textShadow}\n  ${textAlign}\n  ${border}\n`\n\nexport default Box\n","import * as CSS from 'csstype'\n\ntype Position = {\n  center?: boolean\n  left?: boolean\n  right?: boolean\n  top?: boolean\n  bottom?: boolean\n  row?: boolean\n  rowBetween?: boolean\n  colBetween?: boolean\n  rowAround?: boolean\n  colAround?: boolean\n  rowEvenly?: boolean\n  colEvenly?: boolean\n}\n\ntype FlexDirection = CSS.FlexDirectionProperty\n\nexport type JustifyContentProps = CSS.JustifyContentProperty\nexport type AlignItemsProps = CSS.AlignItemsProperty\n\ninterface JustifyContentFN {\n  (params: {\n    childrenPosition: Position\n    flexDirection: FlexDirection\n    alignX?: JustifyContentProps | AlignItemsProps\n    alignY?: JustifyContentProps | AlignItemsProps\n    stretch?: boolean\n  }): JustifyContentProps\n}\ninterface AlignItemsFN {\n  (parmas: {\n    childrenPosition: Position\n    flexDirection: FlexDirection\n    alignX?: JustifyContentProps | AlignItemsProps\n    alignY?: JustifyContentProps | AlignItemsProps\n    stretch?: boolean\n  }): AlignItemsProps\n}\n\n// Get justifyContent property based on Position, Direction jsx props\nexport const getComputedJustifyContent: JustifyContentFN = ({\n  childrenPosition,\n  flexDirection: direction,\n  alignX,\n  alignY,\n  stretch\n}) => {\n  if (direction === 'row') {\n    if(alignX) return alignX\n\n    return childrenPosition.left\n      ? 'flex-start'\n      : childrenPosition.right\n      ? 'flex-end'\n      : childrenPosition.rowBetween\n      ? 'space-between'\n      : childrenPosition.rowAround\n      ? 'space-around'\n      : childrenPosition.rowEvenly\n      ? 'space-evenly'\n      : childrenPosition.center\n      ? 'center'\n      : 'flex-start'\n  }\n  if (direction === 'column') {\n    if(alignY) return alignY\n\n    return childrenPosition.top\n      ? 'flex-start'\n      : childrenPosition.bottom\n      ? 'flex-end'\n      : childrenPosition.colBetween\n      ? 'space-between'\n      : childrenPosition.colAround\n      ? 'space-around'\n      : childrenPosition.colEvenly\n      ? 'space-evenly'\n      : childrenPosition.center\n      ? 'center'\n      : 'flex-start'\n  }\n  return 'flex-start'\n}\n// Get alignItemsjustifyContent property based on Position, Direction jsx props\nexport const getComputedAlignItems: AlignItemsFN = ({\n  childrenPosition,\n  flexDirection: direction,\n  alignX,\n  alignY,\n  stretch\n}) => {\n  if (direction === 'column') {\n    if(stretch) return 'stretch'\n    if(alignX) return alignX\n\n    return childrenPosition.left\n      ? 'flex-start'\n      : childrenPosition.right\n      ? 'flex-end'\n      : childrenPosition.rowBetween\n      ? 'space-between'\n      : childrenPosition.rowAround\n      ? 'space-around'\n      : childrenPosition.rowEvenly\n      ? 'space-evenly'\n      : childrenPosition.center\n      ? 'center'\n      : 'flex-start'\n  }\n  if (direction === 'row') {\n    if(stretch) return 'stretch'\n    if(alignY) return alignY\n\n    return childrenPosition.top\n      ? 'flex-start'\n      : childrenPosition.bottom\n      ? 'flex-end'\n      : childrenPosition.colBetween\n      ? 'space-between'\n      : childrenPosition.colAround\n      ? 'space-around'\n      : childrenPosition.colEvenly\n      ? 'space-evenly'\n      : childrenPosition.center\n      ? 'center'\n      : 'flex-start'\n  }\n  return 'flex-start'\n}\n","import React, { ImgHTMLAttributes, DetailedHTMLProps } from 'react'\nimport * as CSS from 'csstype'\n\nexport interface ImageProps {\n  src?: 'random' | string&{}\n  objectFit?: CSS.ObjectFitProperty\n  fit?: CSS.ObjectFitProperty,\n  cover?: boolean,\n  width?: CSS.WidthProperty<number>\n  height?: CSS.HeightProperty<number>\n  minWidth?: CSS.MinWidthProperty<number>\n  minHeight?: CSS.MinHeightProperty<number>\n  maxWidth?: CSS.MaxWidthProperty<number>\n  maxHeight?: CSS.MaxHeightProperty<number>\n  display?: 'inline' | 'block' | 'inline-block' | 'none' | 'unset' | 'initial'\n  borderRadius?: CSS.BorderRadiusProperty<number>\n}\n\nconst Image: React.FC<ImageProps & DetailedHTMLProps<ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>> = ({\n  src,\n  alt,\n  objectFit,\n  fit,\n  cover,\n  height,\n  width,\n  minWidth,\n  minHeight,\n  maxWidth,\n  maxHeight,\n  display,\n  borderRadius,\n  ...props\n}) => {\n  const objectFitStyle = ():any => {\n    if(cover) return 'cover'\n    if(fit || objectFit) return fit || objectFit\n  }\n\n  const randomSeed:(a:number,b:number)=>number = (a,b)=>{\n    return Math.round(Math.random()*(b-a) + a)\n  }\n\n  return (\n    <img\n      src={src ? src === 'random' ? `https://picsum.photos/seed/${randomSeed(0,3000)}/300` : src : `https://picsum.photos/seed/${randomSeed(0,3000)}/300`}\n      alt={alt}\n      style={{\n        objectFit: objectFitStyle(),\n        width,\n        height,\n        minWidth,\n        minHeight,\n        maxWidth,\n        maxHeight,\n        display,\n        borderRadius\n      }}\n      {...props}\n    />\n  )\n}\n\n// const StyledImage = styled.img`\n\n// `\n\nexport default Image\n","import React, { ImgHTMLAttributes } from 'react'\nimport Box, {BoxProps} from './Box'\nimport Image, {ImageProps} from './Image'\n\nexport interface AvatarProps extends BoxProps {\n  src?: string,\n  /**Generate random pictures from https://picsum.photos/ for quick demonstration.*/\n  random?: boolean\n}\n\nconst Avatar: React.FC<AvatarProps> = ({src, children, random, ...props}) => {\n\n\n  return(\n    <Box {...props} center={children?true:false}>\n      {src ? <Image src={src} /> : children}\n    </Box>\n  )\n}\n\nAvatar.defaultProps = {\n  borderRadius: '50%',\n  cover: true,\n  size: 34,\n  backgroundColor: 'whitesmoke'\n}\n\nexport default Avatar\n"],"names":["Inspect","ref","useRef","useState","width","height","info","setInfo","useEffect","ro","ResizeObserver","entries","current","offsetWidth","offsetHeight","observe","disconnect","jsx","className","style","position","boxShadow","background","top","left","display","justifyContent","alignItems","color","textShadow","fontSize","transition","zIndex","css","Box","row","center","right","bottom","rowBetween","rowAround","rowEvenly","colBetween","colAround","colEvenly","pointer","textTransform","objectFit","fit","cover","fullWidth","inspect","alignX","alignY","stretch","boxSizing","borderBox","contentBox","userSelect","pointerEvents","props","childrenPosition","undefined","flexDirection","direction","getComputedJustifyContent","getComputedAlignItems","cursor","transitionStyle","objectFitCSS","StyledBox","borderRadius","children","defaultProps","styled","div","layout","colorStyle","space","flex","flexbox","fontFamily","fontWeight","fontStyle","textAlign","border","Image","src","alt","minWidth","minHeight","maxWidth","maxHeight","randomSeed","a","b","Math","round","random","React","Avatar","size","backgroundColor"],"mappings":"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"}